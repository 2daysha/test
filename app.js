const tg = window.Telegram.WebApp;

class LoyaltyProApp {
    constructor() {
        this.currentPage = 'home';
        this.cart = [];
        this.userData = null;
        this.userPhone = null;
        this.isTelegram = !!tg.initData;
        this.isAuthenticated = false;
        this.init();
    }

    init() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤ Telegram
        if (this.isTelegram) {
            tg.expand();
            tg.enableClosingConfirmation();
            console.log('Telegram Web App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', tg.initDataUnsafe);
        } else {
            console.log('–ó–∞–ø—É—Å–∫ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        this.loadSavedData();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
        if (this.userPhone) {
            this.isAuthenticated = true;
            this.showMainApp();
        } else {
            this.showAuthPage();
        }
    }

    loadSavedData() {
        const savedPhone = localStorage.getItem('userPhone');
        if (savedPhone) {
            this.userPhone = savedPhone;
            console.log('–ó–∞–≥—Ä—É–∂–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä:', this.userPhone);
        }
    }

    showAuthPage() {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        document.getElementById('page-auth').classList.add('active');
        document.querySelectorAll('.page').forEach(p => {
            if (p.id !== 'page-auth') p.classList.remove('active');
        });
        
        // –°–∫—Ä—ã–≤–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        document.querySelector('.bottom-nav').style.display = 'none';
        
        // –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä–∞
        document.getElementById('request-phone-btn').addEventListener('click', () => {
            this.requestPhoneNumber();
        });
    }

    showMainApp() {
        // –°–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        document.getElementById('page-auth').classList.remove('active');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        document.querySelector('.bottom-nav').style.display = 'flex';
        
        // –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        document.querySelectorAll('.nav-item').forEach(item => {
            item.addEventListener('click', (e) => {
                const targetPage = e.currentTarget.dataset.page;
                this.navigateTo(targetPage);
            });
        });

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        this.loadUserData();
        this.loadPrivileges();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        this.showPage('home');
    }

    requestPhoneNumber() {
        if (this.isTelegram) {
            this.requestPhoneTelegram();
        } else {
            this.requestPhoneBrowser();
        }
    }

    requestPhoneTelegram() {
        console.log('–ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ –≤ Telegram...');
        
        tg.requestContact((contact) => {
            console.log('–û—Ç–≤–µ—Ç –æ—Ç Telegram:', contact);
            
            if (contact && contact.phone_number) {
                this.handlePhoneSuccess(contact.phone_number, contact);
            } else {
                this.handlePhoneError('–ù–æ–º–µ—Ä –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω');
            }
        });
    }

    requestPhoneBrowser() {
        console.log('–ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ...');
        
        // –î–ª—è –±—Ä–∞—É–∑–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –Ω–æ–º–µ—Ä
        const testPhone = '+79991234567';
        const testContact = {
            first_name: '–¢–µ—Å—Ç–æ–≤—ã–π',
            last_name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
        };
        
        this.handlePhoneSuccess(testPhone, testContact);
    }

    handlePhoneSuccess(phone, contact) {
        console.log('‚úÖ –ù–æ–º–µ—Ä –ø–æ–ª—É—á–µ–Ω:', phone);
        console.log('üìã –î–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞:', contact);
        
        this.userPhone = phone;
        this.isAuthenticated = true;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
        localStorage.setItem('userPhone', phone);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç
        if (contact.first_name || contact.last_name) {
            this.userData = {
                firstName: contact.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                lastName: contact.last_name || '',
                username: '–ù–µ —É–∫–∞–∑–∞–Ω',
                id: 'from_contact'
            };
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.showNotification('–£—Å–ø–µ—Ö!', `–ù–æ–º–µ—Ä ${phone} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω`, 'success');
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        setTimeout(() => {
            this.showMainApp();
        }, 1000);
    }

    handlePhoneError(message) {
        console.log('‚ùå –û—à–∏–±–∫–∞:', message);
        this.showNotification('–û—à–∏–±–∫–∞', message, 'error');
    }

    logout() {
        this.userPhone = null;
        this.isAuthenticated = false;
        localStorage.removeItem('userPhone');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        this.showAuthPage();
        
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª');
    }

    navigateTo(page) {
        if (!this.isAuthenticated) {
            this.showAuthPage();
            return;
        }
        this.showPage(page);
    }

    showPage(page) {
        if (!this.isAuthenticated) {
            this.showAuthPage();
            return;
        }

        // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.querySelectorAll('.page').forEach(p => p.classList.remove('active'));
        
        // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        document.querySelectorAll('.nav-item').forEach(item => item.classList.remove('active'));
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        const pageElement = document.getElementById(`page-${page}`);
        if (pageElement) {
            pageElement.classList.add('active');
        }
        
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        const navItem = document.querySelector(`[data-page="${page}"]`);
        if (navItem) {
            navItem.classList.add('active');
        }

        this.currentPage = page;
        this.onPageChange(page);
    }

    onPageChange(page) {
        console.log(`–ü–µ—Ä–µ—à–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É: ${page}`);
        
        switch(page) {
            case 'home':
                this.loadPrivileges();
                break;
            case 'catalog':
                this.loadCart();
                break;
            case 'cart':
                this.loadProfile();
                break;
        }
    }

    loadUserData() {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
        const user = tg.initDataUnsafe?.user;
        if (user) {
            this.userData = {
                firstName: user.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                lastName: user.last_name || '',
                username: user.username ? `@${user.username}` : '–ù–µ —É–∫–∞–∑–∞–Ω',
                id: user.id
            };
            console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', this.userData);
        } else {
            this.userData = {
                firstName: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                lastName: '',
                username: '–ù–µ —É–∫–∞–∑–∞–Ω',
                id: 'unknown'
            };
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ initData
        this.checkPhoneNumber();
    }

    checkPhoneNumber() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ initDataUnsafe
        const initData = tg.initDataUnsafe;
        if (initData && initData.user && initData.user.phone_number) {
            this.userPhone = initData.user.phone_number;
            this.isAuthenticated = true;
            console.log('–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ initData:', this.userPhone);
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–º–µ—Ä–∞
            this.saveUserData();
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–µ—Ä–µ–¥ –¥–µ–π—Å—Ç–≤–∏–µ–º
    async checkPhoneBeforeAction(actionName, actionCallback) {
        if (!this.userPhone) {
            // –ï—Å–ª–∏ –Ω–æ–º–µ—Ä–∞ –Ω–µ—Ç, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –µ–≥–æ
            const wantsToContinue = await this.showConfirm(
                '–¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
                `–î–ª—è ${actionName} –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?`
            );
            
            if (wantsToContinue) {
                this.requestPhoneNumber().then(() => {
                    // –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –≤—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
                    if (this.userPhone) {
                        actionCallback();
                    }
                });
            }
        } else {
            // –ï—Å–ª–∏ –Ω–æ–º–µ—Ä —É–∂–µ –µ—Å—Ç—å, —Å—Ä–∞–∑—É –≤—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
            actionCallback();
        }
    }

    // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    showNotification(title, message, type = 'info') {
        if (this.isTelegram) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Ç–∏–≤–Ω—ã–µ popup Telegram
            tg.showPopup({
                title: title,
                message: message,
                buttons: [{ type: 'ok' }]
            });
        } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ü–ö
            this.showCustomNotification(title, message, type);
        }
    }

    // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    showConfirm(title, message) {
        return new Promise((resolve) => {
            if (this.isTelegram) {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Ç–∏–≤–Ω—ã–π confirm Telegram
                tg.showPopup({
                    title: title,
                    message: message,
                    buttons: [
                        { type: 'ok', text: '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' },
                        { type: 'cancel', text: '–û—Ç–º–µ–Ω–∞' }
                    ]
                });
                // –í Telegram –Ω–∞–º –Ω—É–∂–Ω–æ —Å–ª—É—à–∞—Ç—å —Å–æ–±—ã—Ç–∏—è, –Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –≤–µ—Ä–Ω–µ–º true
                resolve(true);
            } else {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –¥–∏–∞–ª–æ–≥ –¥–ª—è –ü–ö
                this.showCustomConfirm(title, message).then(resolve);
            }
        });
    }

    loadPrivileges() {
        const container = document.getElementById('page-home');
        if (!container) return;

        // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –∏–∫–æ–Ω–æ–∫
        const categories = [
            { 
                id: 'all', 
                name: '–í—Å–µ'
            },
            { 
                id: 'electronics', 
                name: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞'
            },
            { 
                id: 'home', 
                name: '–î–ª—è –¥–æ–º–∞'
            },
            { 
                id: 'lifestyle', 
                name: '–û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏'
            }
        ];

        // –¢–æ–≤–∞—Ä—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
        const products = [
            {
                id: 1,
                name: "–ö–æ—Ñ–µ–≤–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è",
                description: "–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ñ–µ —Å —Ç–∞–π–º–µ—Ä–æ–º",
                price: "2500 –±–æ–Ω—É—Å–æ–≤",
                numericPrice: 2500,
                category: "home"
            },
            {
                id: 2,
                name: "–ù–∞–±–æ—Ä –∫—É—Ö–æ–Ω–Ω—ã—Ö –Ω–æ–∂–µ–π",
                description: "6 –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ",
                price: "1800 –±–æ–Ω—É—Å–æ–≤",
                numericPrice: 1800,
                category: "home"
            },
            {
                id: 3,
                name: "Bluetooth –∫–æ–ª–æ–Ω–∫–∞",
                description: "–í–æ–¥–æ–Ω–µ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º–∞—è, 10W",
                price: "3200 –±–æ–Ω—É—Å–æ–≤",
                numericPrice: 3200,
                category: "electronics"
            },
            {
                id: 4,
                name: "–ü–æ–¥–∞—Ä–æ—á–Ω–∞—è –∫–∞—Ä—Ç–∞ –≤ –º–∞–≥–∞–∑–∏–Ω",
                description: "–ù–æ–º–∏–Ω–∞–ª 1000 —Ä—É–±–ª–µ–π",
                price: "1000 –±–æ–Ω—É—Å–æ–≤",
                numericPrice: 1000,
                category: "lifestyle"
            },
            {
                id: 5,
                name: "–ß–µ–º–æ–¥–∞–Ω –Ω–∞ –∫–æ–ª–µ—Å–∞—Ö",
                description: "55–ª, 4 –∫–æ–ª–µ—Å–∞, —á–µ—Ä–Ω—ã–π",
                price: "4500 –±–æ–Ω—É—Å–æ–≤",
                numericPrice: 4500,
                category: "lifestyle"
            },
            {
                id: 6,
                name: "–§–∏—Ç–Ω–µ—Å-–±—Ä–∞—Å–ª–µ—Ç",
                description: "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–Ω–∞ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
                price: "2800 –±–æ–Ω—É—Å–æ–≤",
                numericPrice: 2800,
                category: "electronics"
            },
            {
                id: 7,
                name: "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏",
                description: "–ó–∞—Ä—è–¥–∫–∞ –æ—Ç case, 20—á —Ä–∞–±–æ—Ç—ã",
                price: "3500 –±–æ–Ω—É—Å–æ–≤",
                numericPrice: 3500,
                category: "electronics"
            },
            {
                id: 8,
                name: "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ —É–∂–∏–Ω",
                description: "–†–µ—Å—Ç–æ—Ä–∞–Ω –Ω–∞ 2 –ø–µ—Ä—Å–æ–Ω—ã",
                price: "2000 –±–æ–Ω—É—Å–æ–≤",
                numericPrice: 2000,
                category: "lifestyle"
            }
        ];

        const categoryNames = {
            electronics: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞",
            home: "–î–ª—è –¥–æ–º–∞", 
            lifestyle: "–û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏"
        };

        container.innerHTML = `
            <div class="categories">
                ${categories.map(cat => `
                    <button class="category-btn ${cat.id === 'all' ? 'active' : ''}" 
                            data-category="${cat.id}">
                        ${cat.name}
                    </button>
                `).join('')}
            </div>
            <div class="products-grid" id="products-grid">
                ${products.map(product => `
                    <div class="product-card" onclick="app.addToCart(${product.id})">
                        <span class="product-category">${categoryNames[product.category]}</span>
                        <h3>${product.name}</h3>
                        <p>${product.description}</p>
                        <div class="product-price">${product.price}</div>
                    </div>
                `).join('')}
            </div>
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        document.querySelectorAll('.category-btn').forEach(btn => {
            btn.addEventListener('click', (e) => {
                const category = e.currentTarget.dataset.category;
                
                document.querySelectorAll('.category-btn').forEach(b => b.classList.remove('active'));
                e.currentTarget.classList.add('active');
                
                this.filterProducts(category, products, categoryNames);
            });
        });
    }

    filterProducts(category, products, categoryNames) {
        const grid = document.getElementById('products-grid');
        
        const filteredProducts = category === 'all' 
            ? products 
            : products.filter(product => product.category === category);
        
        grid.innerHTML = filteredProducts.map(product => `
            <div class="product-card" onclick="app.addToCart(${product.id})">
                <span class="product-category">${categoryNames[product.category]}</span>
                <h3>${product.name}</h3>
                <p>${product.description}</p>
                <div class="product-price">${product.price}</div>
            </div>
        `).join('');
    }

    addToCart(productId) {
        this.checkPhoneBeforeAction('–¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É', () => {
            // –†–∞–∑–ª–∏—á–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏ —É—Å–ª—É–≥–∏ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∑–∞ –±–æ–Ω—É—Å—ã
            const products = {
                1: { 
                    name: "–ö–æ—Ñ–µ–≤–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è", 
                    description: "–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ñ–µ —Å —Ç–∞–π–º–µ—Ä–æ–º",
                    price: "2500 –±–æ–Ω—É—Å–æ–≤", 
                    numericPrice: 2500,
                    category: "–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞"
                },
                2: { 
                    name: "–ù–∞–±–æ—Ä –∫—É—Ö–æ–Ω–Ω—ã—Ö –Ω–æ–∂–µ–π", 
                    description: "6 –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ",
                    price: "1800 –±–æ–Ω—É—Å–æ–≤", 
                    numericPrice: 1800,
                    category: "–ö—É—Ö–æ–Ω–Ω—ã–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏"
                },
                3: { 
                    name: "Bluetooth –∫–æ–ª–æ–Ω–∫–∞", 
                    description: "–í–æ–¥–æ–Ω–µ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º–∞—è, 10W",
                    price: "3200 –±–æ–Ω—É—Å–æ–≤", 
                    numericPrice: 3200,
                    category: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞"
                },
                4: { 
                    name: "–ü–æ–¥–∞—Ä–æ—á–Ω–∞—è –∫–∞—Ä—Ç–∞ –≤ –º–∞–≥–∞–∑–∏–Ω", 
                    description: "–ù–æ–º–∏–Ω–∞–ª 1000 —Ä—É–±–ª–µ–π",
                    price: "1000 –±–æ–Ω—É—Å–æ–≤", 
                    numericPrice: 1000,
                    category: "–ü–æ–¥–∞—Ä–æ—á–Ω—ã–µ –∫–∞—Ä—Ç—ã"
                },
                5: { 
                    name: "–ß–µ–º–æ–¥–∞–Ω –Ω–∞ –∫–æ–ª–µ—Å–∞—Ö", 
                    description: "55–ª, 4 –∫–æ–ª–µ—Å–∞, —á–µ—Ä–Ω—ã–π",
                    price: "4500 –±–æ–Ω—É—Å–æ–≤", 
                    numericPrice: 4500,
                    category: "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"
                },
                6: { 
                    name: "–§–∏—Ç–Ω–µ—Å-–±—Ä–∞—Å–ª–µ—Ç", 
                    description: "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–Ω–∞ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
                    price: "2800 –±–æ–Ω—É—Å–æ–≤", 
                    numericPrice: 2800,
                    category: "–ó–¥–æ—Ä–æ–≤—å–µ"
                },
                7: { 
                    name: "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏", 
                    description: "–ó–∞—Ä—è–¥–∫–∞ –æ—Ç case, 20—á —Ä–∞–±–æ—Ç—ã",
                    price: "3500 –±–æ–Ω—É—Å–æ–≤", 
                    numericPrice: 3500,
                    category: "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã"
                },
                8: { 
                    name: "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ —É–∂–∏–Ω", 
                    description: "–†–µ—Å—Ç–æ—Ä–∞–Ω –Ω–∞ 2 –ø–µ—Ä—Å–æ–Ω—ã",
                    price: "2000 –±–æ–Ω—É—Å–æ–≤", 
                    numericPrice: 2000,
                    category: "–†–µ—Å—Ç–æ—Ä–∞–Ω—ã"
                }
            };

            const product = products[productId];
            if (!product) return;

            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É
            this.cart.push({
                id: Date.now(),
                productId: productId,
                name: product.name,
                description: product.description,
                price: product.price,
                numericPrice: product.numericPrice,
                category: product.category
            });

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            this.showNotification(
                '–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É', 
                `${product.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`,
                'success'
            );

            console.log('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É:', product);
            console.log('–ö–æ—Ä–∑–∏–Ω–∞:', this.cart);
        });
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è checkout —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–æ–º–µ—Ä–∞
    async checkout() {
        this.checkPhoneBeforeAction('–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞', () => {
            this.processCheckout();
        });
    }

    async processCheckout() {
        if (this.cart.length === 0) {
            this.showNotification('–û—à–∏–±–∫–∞', '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞', 'error');
            return;
        }

        const total = this.cart.reduce((sum, item) => sum + item.numericPrice, 0);
        
        const confirmed = await this.showConfirm(
            '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞',
            `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ —Å—É–º–º—É ${total} –±–æ–Ω—É—Å–æ–≤?`
        );

        if (confirmed) {
            // –û—Ñ–æ—Ä–º–ª—è–µ–º –∑–∞–∫–∞–∑
            this.showNotification('–£—Å–ø–µ—Ö', '–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!', 'success');
            this.cart = []; // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
            this.loadCart(); // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥ –∫–æ—Ä–∑–∏–Ω—ã
            
            // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –≤—ã–∑–æ–≤ API
            console.log('–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω:', this.cart);
        } else {
            this.showNotification('–û—Ç–º–µ–Ω–µ–Ω–æ', '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω', 'warning');
        }
    }

    // –ö–∞—Å—Ç–æ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ü–ö
    showCustomNotification(title, message, type = 'info') {
        const notification = document.getElementById('notification');
        const titleEl = document.getElementById('notification-title');
        const messageEl = document.getElementById('notification-message');
        const icon = notification.querySelector('.notification-icon');

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        titleEl.textContent = title;
        messageEl.textContent = message;

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∏–ø –∏ –∏–∫–æ–Ω–∫—É
        notification.className = `notification notification-${type}`;
        
        // –ú–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        switch(type) {
            case 'success':
                icon.innerHTML = '<path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>';
                break;
            case 'error':
                icon.innerHTML = '<path d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"/>';
                break;
            case 'warning':
                icon.innerHTML = '<path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"/>';
                break;
            default:
                icon.innerHTML = '<path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"/>';
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        notification.classList.add('show');

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            notification.classList.remove('show');
        }, 3000);
    }

    // –ö–∞—Å—Ç–æ–º–Ω—ã–π –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –ü–ö
    showCustomConfirm(title, message) {
        return new Promise((resolve) => {
            const dialog = document.getElementById('confirm-dialog');
            const titleEl = document.getElementById('confirm-title');
            const messageEl = document.getElementById('confirm-message');
            const okBtn = document.getElementById('confirm-ok');
            const cancelBtn = document.getElementById('confirm-cancel');

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            titleEl.textContent = title;
            messageEl.textContent = message;

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
            dialog.classList.add('show');

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
            const handleOk = () => {
                cleanup();
                resolve(true);
            };

            const handleCancel = () => {
                cleanup();
                resolve(false);
            };

            const cleanup = () => {
                dialog.classList.remove('show');
                okBtn.removeEventListener('click', handleOk);
                cancelBtn.removeEventListener('click', handleCancel);
            };

            okBtn.addEventListener('click', handleOk);
            cancelBtn.addEventListener('click', handleCancel);
        });
    }

    loadCart() {
        const container = document.getElementById('page-catalog');
        if (!container) return;

        if (this.cart.length === 0) {
            container.innerHTML = `
                <div class="loading" style="text-align: center; padding: 40px 20px; color: var(--tg-theme-hint-color, #999999);">
                    –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞
                </div>
            `;
            return;
        }

        const total = this.cart.reduce((sum, item) => sum + item.numericPrice, 0);

        container.innerHTML = `
            ${this.cart.map(item => `
                <div class="cart-item">
                    <div class="cart-item-info">
                        <span class="cart-item-category">${item.category}</span>
                        <h3>${item.name}</h3>
                        <p>${item.description}</p>
                        <div class="cart-item-price">${item.price}</div>
                    </div>
                    <button onclick="app.removeFromCart(${item.id})" class="delete-btn">
                        –£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
                    </button>
                </div>
            `).join('')}
            <div class="cart-total">
                <h3>–û–±—â–∞—è —Å—É–º–º–∞</h3>
                <div class="cart-total-price">${total} –±–æ–Ω—É—Å–æ–≤</div>
                <button onclick="app.checkout()" class="checkout-btn">
                    –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                </button>
            </div>
        `;
    }

    removeFromCart(itemId) {
        this.cart = this.cart.filter(item => item.id !== itemId);
        this.loadCart(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥ –∫–æ—Ä–∑–∏–Ω—ã
        this.showNotification('–£–¥–∞–ª–µ–Ω–æ', '–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã', 'info');
    }

    loadProfile() {
        const container = document.getElementById('page-cart');
        if (!container) return;

        const stats = {
            totalOrders: this.cart.length,
            totalSpent: this.cart.reduce((sum, item) => sum + item.numericPrice, 0),
            availableBonuses: 5000, // –ü—Ä–∏–º–µ—Ä –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤
            rate: "Premium" // –ü—Ä–∏–º–µ—Ä —É—Ä–æ–≤–Ω—è
        };

        container.innerHTML = `
            <div class="profile-info">
                <div style="display: flex; align-items: center; gap: 12px; margin-bottom: 16px;">
                    <svg width="40" height="40" viewBox="0 0 24 24" fill="#3F75FB">
                        <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"/>
                    </svg>
                    <div>
                        <h3 style="margin: 0; font-size: 18px;">${this.userData?.firstName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</h3>
                        <p style="margin: 0; color: var(--tg-theme-hint-color, #999999); font-size: 14px;">–¢–∞—Ä–∏—Ñ: ${stats.rate}</p>
                    </div>
                </div>
                <p><strong>Username:</strong> ${this.userData?.username || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                <p><strong>ID:</strong> ${this.userData?.id || 'unknown'}</p>
                <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${this.userPhone ? this.userPhone : 
                    '<button onclick="app.requestPhoneNumber()" style="background: #3F75FB; color: white; border: none; padding: 6px 12px; border-radius: 6px; font-size: 12px; cursor: pointer;">–ü–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä</button>'}</p>
                <button onclick="app.logout()" style="background: #ff4444; color: white; border: none; padding: 8px 16px; border-radius: 6px; font-size: 14px; cursor: pointer; margin-top: 12px; width: 100%;">
                    –í—ã–π—Ç–∏
                </button>
            </div>
            
            <div class="profile-stats">
                <div class="stat-card">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="#3F75FB" style="margin-bottom: 8px;">
                        <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
                    </svg>
                    <span class="stat-value">${stats.availableBonuses}</span>
                    <span class="stat-label">–î–æ—Å—Ç—É–ø–Ω–æ –±–æ–Ω—É—Å–æ–≤</span>
                </div>
                <div class="stat-card">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="#3F75FB" style="margin-bottom: 8px;">
                        <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z"/>
                    </svg>
                    <span class="stat-value">${stats.totalOrders}</span>
                    <span class="stat-label">–ó–∞–∫–∞–∑–æ–≤</span>
                </div>
            </div>
            
            <button class="tariff-btn" onclick="app.selectTariff()" style="width: 100%; padding: 12px 16px; background: #4CAF50; color: white; border: none; border-radius: 8px; font-size: 16px; cursor: pointer; margin-bottom: 12px; display: flex; align-items: center; justify-content: center;">
                –í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ
            </button>
            
            <button class="support-btn" onclick="app.showSupport()">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor" style="margin-right: 8px;">
                    <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"/>
                </svg>
                –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
            </button>
        `;
    }

    selectTariff() {
        this.showNotification('–í—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞', '–§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');
    }

    showSupport() {
        this.showNotification('–ü–æ–¥–¥–µ—Ä–∂–∫–∞', '–§—É–Ω–∫—Ü–∏—è —Å–≤—è–∑–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');
    }

    saveUserData() {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = new LoyaltyProApp();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–≥–¥–∞ DOM –∑–∞–≥—Ä—É–∂–µ–Ω
document.addEventListener('DOMContentLoaded', () => {
    console.log('Loyalty Pro App –∑–∞–ø—É—â–µ–Ω!');
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.app = app;