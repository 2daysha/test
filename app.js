const tg = window.Telegram.WebApp;

class LoyaltyProApp {
    constructor() {
        this.currentPage = 'auth';
        this.cart = [];
        this.userData = null;
        this.userPhone = null;
        this.isTelegram = !!tg.initData;
        this.isAuthenticated = false;
        this.users = [];
        this.init();
    }

    async init() {
        if (this.isTelegram) {
            tg.expand();
            tg.enableClosingConfirmation();
            console.log('Telegram Web App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', tg.initDataUnsafe);
        } else {
            console.log('–ó–∞–ø—É—Å–∫ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        await this.loadUsersData();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        this.loadSavedUserData();
        this.loadUserData();

        // –ï—Å–ª–∏ –Ω–æ–º–µ—Ä —É–∂–µ –µ—Å—Ç—å, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        if (this.userPhone) {
            this.isAuthenticated = true;
            this.showPage('home');
            this.loadPrivileges();
        } else {
            this.showPage('auth');
            this.initShareContactButton();
        }

        // –ù–∞–≤–∏–≥–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        document.querySelectorAll('.nav-item').forEach(item => {
            item.addEventListener('click', (e) => {
                if (!this.isAuthenticated) {
                    this.showNotification('–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞', 'warning');
                    this.showPage('auth');
                    return;
                }
                
                const targetPage = e.currentTarget.dataset.page;
                this.navigateTo(targetPage);
            });
        });
    }

    initShareContactButton() {
        const authPage = document.getElementById('page-auth');
        if (!authPage) return;

        if (this.isTelegram) {
            authPage.innerHTML = `
                <div class="auth-container">
                    <div class="auth-header">
                        <h2 class="auth-title">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h2>
                        <p class="auth-subtitle">
                            –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ–Ω—É—Å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                        </p>
                    </div>
                    
                    <p class="auth-instruction">
                        –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞
                    </p>
                </div>
            `;
            this.initMainButton();
        } else {
            // –î–ª—è –ü–ö –≤–µ—Ä—Å–∏–∏ –æ–±—ã—á–Ω–∞—è –∫–Ω–æ–ø–∫–∞
            authPage.innerHTML = `
                <div class="auth-container">
                    <div class="auth-header">
                        <h2 class="auth-title">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h2>
                        <p class="auth-subtitle">
                            –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ–Ω—É—Å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                        </p>
                    </div>
                    
                    <button id="share-contact-btn" class="share-contact-btn">
                        üì± –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                    </button>

                    <div class="auth-footer">
                        –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                    </div>
                </div>
            `;

            document.getElementById('share-contact-btn').addEventListener('click', () => {
                this.shareContact();
            });
        }
    }

    initMainButton() {
        if (!this.isTelegram) return;

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–Ω–æ–ø–∫—É Telegram
        tg.MainButton.setText("üì± –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä");
        tg.MainButton.setColor("#3F75FB");
        tg.MainButton.show();
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
        tg.MainButton.onClick(() => {
            this.requestPhoneWithMainButton();
        });
    }

    requestPhoneWithMainButton() {
        if (!this.isTelegram) return;

        tg.requestContact((contact) => {
            console.log('Contact response:', contact);
            
            if (contact && contact.phone_number) {
                this.userPhone = contact.phone_number;
                console.log('‚úÖ –ù–æ–º–µ—Ä –ø–æ–ª—É—á–µ–Ω:', this.userPhone);
                
                // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ —É—Å–ø–µ—Ö–∞
                tg.MainButton.hide();
                
                this.processUserAuthentication(this.userPhone, contact);
            } else {
                console.log('‚ùå –ù–æ–º–µ—Ä –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω');
                this.showNotification('–û—Ç–º–µ–Ω–µ–Ω–æ', '–ù–æ–º–µ—Ä –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω', 'warning');
            }
        });
    }

    shareContact() {
        // –î–ª—è –ü–ö –≤–µ—Ä—Å–∏–∏
        this.userPhone = '+79991234567';
        this.processUserAuthentication(this.userPhone, {
            first_name: '–¢–µ—Å—Ç–æ–≤—ã–π',
            last_name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
        });
    }

    async processUserAuthentication(phone, contactData = null) {
        this.userPhone = phone;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        this.saveUserData();
        this.isAuthenticated = true;
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–æ—Ç–∞
        await this.sendUserDataToBot(phone, contactData);
        
        this.showNotification('–£—Å–ø–µ—Ö', '–ù–æ–º–µ—Ä –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!', 'success');
        
        setTimeout(() => {
            this.showPage('home');
            this.loadPrivileges();
        }, 1000);
    }

    async sendUserDataToBot(phone, contactData = null) {
        if (!this.isTelegram) {
            console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–∞ (–ü–ö —Ä–µ–∂–∏–º):', { phone });
            return;
        }

        try {
            const userData = {
                type: 'user_auth',
                phone: phone,
                firstName: contactData?.first_name || this.userData?.firstName,
                lastName: contactData?.last_name || this.userData?.lastName,
                userId: contactData?.user_id || this.userData?.id
            };

            tg.sendData(JSON.stringify(userData));
            console.log('–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –±–æ—Ç–∞:', userData);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–∞:', error);
        }
    }

    async loadUsersData() {
        try {
            const response = await fetch('./users.json');
            if (response.ok) {
                this.users = await response.json();
                console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', this.users);
            } else {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ users.json:', response.status);
                this.users = [];
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ users.json:', error);
            this.users = [];
        }
    }

    saveUserData() {
        const userData = {
            userData: this.userData,
            userPhone: this.userPhone
        };
        localStorage.setItem('loyaltyProUserData', JSON.stringify(userData));
        console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
    }

    loadSavedUserData() {
        const saved = localStorage.getItem('loyaltyProUserData');
        if (saved) {
            try {
                const userData = JSON.parse(saved);
                this.userData = userData.userData || this.userData;
                this.userPhone = userData.userPhone || this.userPhone;
                console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ localStorage:', this.userPhone);
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', e);
            }
        }
    }

    loadUserData() {
        const user = tg.initDataUnsafe?.user;
        if (user) {
            this.userData = {
                firstName: user.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                lastName: user.last_name || '',
                username: user.username ? `@${user.username}` : '–ù–µ —É–∫–∞–∑–∞–Ω',
                id: user.id
            };
            console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', this.userData);
        } else {
            this.userData = {
                firstName: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                lastName: '',
                username: '–ù–µ —É–∫–∞–∑–∞–Ω',
                id: 'unknown'
            };
        }
    }

    showPage(page) {
        document.querySelectorAll('.page').forEach(p => p.classList.remove('active'));
        document.querySelectorAll('.nav-item').forEach(item => item.classList.remove('active'));
        
        const pageElement = document.getElementById(`page-${page}`);
        if (pageElement) {
            pageElement.classList.add('active');
        }
        
        if (page !== 'auth') {
            const navItem = document.querySelector(`[data-page="${page}"]`);
            if (navItem) {
                navItem.classList.add('active');
            }
        }

        this.currentPage = page;
        this.onPageChange(page);
    }

    navigateTo(page) {
        if (!this.isAuthenticated && page !== 'auth') {
            this.showNotification('–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞', 'warning');
            this.showPage('auth');
            return;
        }
        this.showPage(page);
    }

    onPageChange(page) {
        console.log(`–ü–µ—Ä–µ—à–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É: ${page}`);
        
        if (!this.isAuthenticated && page !== 'auth') return;
        
        switch(page) {
            case 'home':
                this.loadPrivileges();
                break;
            case 'catalog':
                this.loadCart();
                break;
            case 'cart':
                this.loadProfile();
                break;
        }
    }

    showNotification(title, message, type = 'info') {
        if (this.isTelegram) {
            tg.showPopup({
                title: title,
                message: message,
                buttons: [{ type: 'ok' }]
            });
        } else {
            alert(`${title}: ${message}`);
        }
    }


    loadPrivileges() {
        const container = document.getElementById('page-home');
        if (!container) return;

        const categories = [
            { id: 'all', name: '–í—Å–µ' },
            { id: 'electronics', name: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞' },
            { id: 'home', name: '–î–ª—è –¥–æ–º–∞' },
            { id: 'lifestyle', name: '–û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏' }
        ];

        const products = [
            { id: 1, name: "–ö–æ—Ñ–µ–≤–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è", description: "–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ñ–µ —Å —Ç–∞–π–º–µ—Ä–æ–º", price: "2500 –±–æ–Ω—É—Å–æ–≤", numericPrice: 2500, category: "home" },
            { id: 2, name: "–ù–∞–±–æ—Ä –∫—É—Ö–æ–Ω–Ω—ã—Ö –Ω–æ–∂–µ–π", description: "6 –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ", price: "1800 –±–æ–Ω—É—Å–æ–≤", numericPrice: 1800, category: "home" },
            { id: 3, name: "Bluetooth –∫–æ–ª–æ–Ω–∫–∞", description: "–í–æ–¥–æ–Ω–µ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º–∞—è, 10W", price: "3200 –±–æ–Ω—É—Å–æ–≤", numericPrice: 3200, category: "electronics" },
            { id: 4, name: "–ü–æ–¥–∞—Ä–æ—á–Ω–∞—è –∫–∞—Ä—Ç–∞ –≤ –º–∞–≥–∞–∑–∏–Ω", description: "–ù–æ–º–∏–Ω–∞–ª 1000 —Ä—É–±–ª–µ–π", price: "1000 –±–æ–Ω—É—Å–æ–≤", numericPrice: 1000, category: "lifestyle" }
        ];

        const categoryNames = {
            electronics: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞",
            home: "–î–ª—è –¥–æ–º–∞", 
            lifestyle: "–û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏"
        };

        container.innerHTML = `
            <div class="categories">
                ${categories.map(cat => `
                    <button class="category-btn ${cat.id === 'all' ? 'active' : ''}" data-category="${cat.id}">
                        ${cat.name}
                    </button>
                `).join('')}
            </div>
            <div class="products-grid">
                ${products.map(product => `
                    <div class="product-card" onclick="app.addToCart(${product.id})">
                        <span class="product-category">${categoryNames[product.category]}</span>
                        <h3>${product.name}</h3>
                        <p>${product.description}</p>
                        <div class="product-price">${product.price}</div>
                    </div>
                `).join('')}
            </div>
        `;
    }

    addToCart(productId) {
        if (!this.userPhone) {
            this.showNotification('–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞', 'warning');
            this.showPage('auth');
            return;
        }

        const products = {
            1: { name: "–ö–æ—Ñ–µ–≤–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è", price: "2500 –±–æ–Ω—É—Å–æ–≤", numericPrice: 2500, category: "–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞" },
            2: { name: "–ù–∞–±–æ—Ä –∫—É—Ö–æ–Ω–Ω—ã—Ö –Ω–æ–∂–µ–π", price: "1800 –±–æ–Ω—É—Å–æ–≤", numericPrice: 1800, category: "–ö—É—Ö–æ–Ω–Ω—ã–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏" },
            3: { name: "Bluetooth –∫–æ–ª–æ–Ω–∫–∞", price: "3200 –±–æ–Ω—É—Å–æ–≤", numericPrice: 3200, category: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞" },
            4: { name: "–ü–æ–¥–∞—Ä–æ—á–Ω–∞—è –∫–∞—Ä—Ç–∞ –≤ –º–∞–≥–∞–∑–∏–Ω", price: "1000 –±–æ–Ω—É—Å–æ–≤", numericPrice: 1000, category: "–ü–æ–¥–∞—Ä–æ—á–Ω—ã–µ –∫–∞—Ä—Ç—ã" }
        };

        const product = products[productId];
        if (!product) return;

        this.cart.push({
            id: Date.now(),
            productId: productId,
            name: product.name,
            price: product.price,
            numericPrice: product.numericPrice,
            category: product.category
        });

        this.showNotification('–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É', `${product.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`, 'success');
    }

    loadCart() {
        const container = document.getElementById('page-catalog');
        if (!container) return;

        if (this.cart.length === 0) {
            container.innerHTML = '<div class="loading">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</div>';
            return;
        }

        const total = this.cart.reduce((sum, item) => sum + item.numericPrice, 0);

        container.innerHTML = `
            ${this.cart.map(item => `
                <div class="cart-item">
                    <div class="cart-item-info">
                        <h3>${item.name}</h3>
                        <div class="cart-item-price">${item.price}</div>
                    </div>
                    <button onclick="app.removeFromCart(${item.id})" class="delete-btn">
                        –£–¥–∞–ª–∏—Ç—å
                    </button>
                </div>
            `).join('')}
            <div class="cart-total">
                <h3>–û–±—â–∞—è —Å—É–º–º–∞: ${total} –±–æ–Ω—É—Å–æ–≤</h3>
                <button onclick="app.checkout()" class="checkout-btn">
                    –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                </button>
            </div>
        `;
    }

    removeFromCart(itemId) {
        this.cart = this.cart.filter(item => item.id !== itemId);
        this.loadCart();
    }

    checkout() {
        if (this.cart.length === 0) {
            this.showNotification('–û—à–∏–±–∫–∞', '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞', 'error');
            return;
        }
        this.showNotification('–£—Å–ø–µ—Ö', '–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!', 'success');
        this.cart = [];
        this.loadCart();
    }

    loadProfile() {
        const container = document.getElementById('page-cart');
        if (!container) return;

        container.innerHTML = `
            <div class="profile-info">
                <h3>${this.userData.firstName}</h3>
                <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${this.userPhone}</p>
                <p><strong>–ë–æ–Ω—É—Å—ã:</strong> 5000</p>
            </div>
        `;
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = new LoyaltyProApp();

document.addEventListener('DOMContentLoaded', () => {
    console.log('Loyalty Pro App –∑–∞–ø—É—â–µ–Ω!');
});