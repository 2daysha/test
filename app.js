const tg = window.Telegram.WebApp;

class LoyaltyProApp {
    constructor() {
        this.currentPage = 'auth';
        this.cart = [];
        this.userData = null;
        this.userPhone = null;
        this.isTelegram = !!tg.initData;
        this.isAuthenticated = false;
        this.users = [];
        this.init();
    }

    async init() {
        if (this.isTelegram) {
            tg.expand();
            tg.enableClosingConfirmation();
            console.log('Telegram Web App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', tg.initDataUnsafe);
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º
            this.initShareContactButton();
        } else {
            console.log('–ó–∞–ø—É—Å–∫ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        await this.loadUsersData();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        this.loadSavedUserData();
        this.loadUserData();

        // –ï—Å–ª–∏ –Ω–æ–º–µ—Ä —É–∂–µ –µ—Å—Ç—å, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        if (this.userPhone) {
            this.isAuthenticated = true;
            this.showPage('home');
            this.loadPrivileges();
        } else {
            this.showPage('auth');
        }

        // –ù–∞–≤–∏–≥–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        document.querySelectorAll('.nav-item').forEach(item => {
            item.addEventListener('click', (e) => {
                if (!this.isAuthenticated) {
                    this.showNotification('–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞', 'warning');
                    this.showPage('auth');
                    return;
                }
                
                const targetPage = e.currentTarget.dataset.page;
                this.navigateTo(targetPage);
            });
        });
    }

    initShareContactButton() {
    const authPage = document.getElementById('page-auth');
    if (!authPage) return;

    authPage.innerHTML = `
        <div class="auth-container">
            <div class="auth-header">
                <h2 class="auth-title">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h2>
                <p class="auth-subtitle">
                    –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ–Ω—É—Å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                </p>
            </div>
            
            <p class="auth-instruction">
                –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞
            </p>
        </div>
    `;

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º Main Button –≤–º–µ—Å—Ç–æ –æ–±—ã—á–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    this.initMainButton();
}

initMainButton() {
    const tg = window.Telegram.WebApp;
    
    if (!this.isTelegram) {
        // –î–ª—è –ü–ö –≤–µ—Ä—Å–∏–∏ —Å–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—É—é –∫–Ω–æ–ø–∫—É
        this.createFallbackButton();
        return;
    }

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–Ω–æ–ø–∫—É Telegram
    tg.MainButton.setText("üì± –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä");
    tg.MainButton.setColor("#3F75FB");
    tg.MainButton.show();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
    tg.MainButton.onClick(() => {
        this.requestPhoneWithMainButton();
    });
}

requestPhoneWithMainButton() {
    const tg = window.Telegram.WebApp;
    
    tg.requestContact((contact) => {
        if (contact && contact.phone_number) {
            this.userPhone = contact.phone_number;
            console.log('‚úÖ –ù–æ–º–µ—Ä –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ MainButton:', this.userPhone);
            
            // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ —É—Å–ø–µ—Ö–∞
            tg.MainButton.hide();
            
            this.processUserAuthentication(this.userPhone, contact);
        } else {
            this.showNotification('–û—Ç–º–µ–Ω–µ–Ω–æ', '–ù–æ–º–µ—Ä –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω', 'warning');
        }
    });
}

    async sendUserDataToBot(phone, contactData = null) {
        if (!this.isTelegram) {
            console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–∞ (–ü–ö —Ä–µ–∂–∏–º):', { phone });
            return;
        }

        try {
            const userData = {
                type: 'user_auth',
                phone: phone,
                firstName: contactData?.first_name || this.userData?.firstName,
                lastName: contactData?.last_name || this.userData?.lastName,
                userId: contactData?.user_id || this.userData?.id
            };

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–æ—Ç–∞
            tg.sendData(JSON.stringify(userData));
            console.log('–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –±–æ—Ç–∞:', userData);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–∞:', error);
        }
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ users.json
    async loadUsersData() {
        try {
            const response = await fetch('./users.json');
            if (response.ok) {
                this.users = await response.json();
                console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', this.users);
            } else {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ users.json:', response.status);
                this.users = [];
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ users.json:', error);
            this.users = [];
        }
    }

    saveUserData() {
        const userData = {
            userData: this.userData,
            userPhone: this.userPhone
        };
        localStorage.setItem('loyaltyProUserData', JSON.stringify(userData));
        console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
    }

    // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    findUserByPhone(phone) {
        return this.users.find(user => user.phone === phone);
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    createUser(userData) {
        const newUser = {
            id: Date.now().toString(),
            phone: userData.phone,
            firstName: userData.firstName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            lastName: userData.lastName || '',
            username: userData.username || '',
            telegramId: userData.telegramId || null,
            registrationDate: new Date().toISOString(),
            bonuses: 5000, // –ù–∞—á–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å–Ω—ã–π –±–∞–ª–∞–Ω—Å
            orders: [],
            level: 'Premium'
        };
        
        this.users.push(newUser);
        this.saveUsersData();
        return newUser;
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    updateUser(phone, updates) {
        const userIndex = this.users.findIndex(user => user.phone === phone);
        if (userIndex !== -1) {
            this.users[userIndex] = { ...this.users[userIndex], ...updates };
            this.saveUsersData();
            return this.users[userIndex];
        }
        return null;
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    addUserOrder(phone, order) {
        const user = this.findUserByPhone(phone);
        if (user) {
            if (!user.orders) user.orders = [];
            user.orders.push({
                id: Date.now().toString(),
                date: new Date().toISOString(),
                items: order.items,
                total: order.total,
                status: 'completed'
            });
            
            // –í—ã—á–∏—Ç–∞–µ–º –±–æ–Ω—É—Å—ã
            user.bonuses -= order.total;
            
            this.saveUsersData();
            return true;
        }
        return false;
    }


    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    processUserAuthentication(phone, contactData = null) {
        this.userPhone = phone;
        
        // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
        let user = this.findUserByPhone(phone);
        
        if (!user) {
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = this.createUser({
                phone: phone,
                firstName: contactData?.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                lastName: contactData?.last_name || '',
                telegramId: contactData?.user_id || null
            });
            console.log('–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:', user);
        } else {
            console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', user);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        this.userData = {
            firstName: user.firstName,
            lastName: user.lastName,
            username: user.username ? `@${user.username}` : '–ù–µ —É–∫–∞–∑–∞–Ω',
            id: user.telegramId || user.id,
            bonuses: user.bonuses,
            level: user.level
        };

        this.saveUserData();
        this.isAuthenticated = true;
        
        this.showNotification('–£—Å–ø–µ—Ö', '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!', 'success');
        
        setTimeout(() => {
            this.showPage('home');
            this.loadPrivileges();
        }, 1000);
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–µ—Ä–µ–¥ –¥–µ–π—Å—Ç–≤–∏–µ–º
    checkPhoneBeforeAction(actionName, callback) {
        if (!this.userPhone) {
            this.showNotification(
                '–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', 
                `–î–ª—è ${actionName} –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞`, 
                'warning'
            );
            this.showPage('auth');
            return;
        }
        callback();
    }

    async processCheckout() {
        if (this.cart.length === 0) {
            this.showNotification('–û—à–∏–±–∫–∞', '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞', 'error');
            return;
        }

        const total = this.cart.reduce((sum, item) => sum + item.numericPrice, 0);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –±–æ–Ω—É—Å–æ–≤
        const user = this.findUserByPhone(this.userPhone);
        if (user && user.bonuses < total) {
            this.showNotification(
                '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–æ–Ω—É—Å–æ–≤', 
                `–£ –≤–∞—Å ${user.bonuses} –±–æ–Ω—É—Å–æ–≤, —Ç—Ä–µ–±—É–µ—Ç—Å—è ${total}`, 
                'error'
            );
            return;
        }

        const confirmed = await this.showConfirm(
            '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞',
            `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ —Å—É–º–º—É ${total} –±–æ–Ω—É—Å–æ–≤?`
        );

        if (confirmed) {
            // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            const orderSuccess = this.addUserOrder(this.userPhone, {
                items: this.cart,
                total: total
            });

            if (orderSuccess) {
                this.showNotification('–£—Å–ø–µ—Ö', '–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!', 'success');
                this.cart = [];
                this.loadCart();
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const updatedUser = this.findUserByPhone(this.userPhone);
                if (updatedUser) {
                    this.userData.bonuses = updatedUser.bonuses;
                    this.saveUserData();
                }
            } else {
                this.showNotification('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', 'error');
            }
        } else {
            this.showNotification('–û—Ç–º–µ–Ω–µ–Ω–æ', '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω', 'warning');
        }
    }

    loadProfile() {
        const container = document.getElementById('page-cart');
        if (!container) return;

        const user = this.findUserByPhone(this.userPhone);
        const stats = {
            totalOrders: user?.orders?.length || 0,
            totalSpent: user?.orders?.reduce((sum, order) => sum + order.total, 0) || 0,
            availableBonuses: user?.bonuses || 0,
            rate: user?.level || 'Standard'
        };

        container.innerHTML = `
            <div class="profile-info">
                <div style="display: flex; align-items: center; gap: 12px; margin-bottom: 16px;">
                    <svg width="40" height="40" viewBox="0 0 24 24" fill="#3F75FB">
                        <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"/>
                    </svg>
                    <div>
                        <h3 style="margin: 0; font-size: 18px;">${this.userData.firstName}</h3>
                        <p style="margin: 0; color: var(--tg-theme-hint-color, #999999); font-size: 14px;">–¢–∞—Ä–∏—Ñ: ${stats.rate}</p>
                    </div>
                </div>
                <p><strong>Username:</strong> ${this.userData.username}</p>
                <p><strong>ID:</strong> ${this.userData.id}</p>
                <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${this.userPhone}</p>
                <p><strong>–ë–æ–Ω—É—Å—ã:</strong> ${stats.availableBonuses}</p>
                <p><strong>–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤:</strong> ${stats.totalOrders}</p>
                <p><strong>–ü–æ—Ç—Ä–∞—á–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤:</strong> ${stats.totalSpent}</p>
            </div>
            
            <div class="profile-stats">
                <div class="stat-card">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="#3F75FB" style="margin-bottom: 8px;">
                        <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
                    </svg>
                    <span class="stat-value">${stats.availableBonuses}</span>
                    <span class="stat-label">–î–æ—Å—Ç—É–ø–Ω–æ –±–æ–Ω—É—Å–æ–≤</span>
                </div>
                <div class="stat-card">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="#3F75FB" style="margin-bottom: 8px;">
                        <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z"/>
                    </svg>
                    <span class="stat-value">${stats.totalOrders}</span>
                    <span class="stat-label">–ó–∞–∫–∞–∑–æ–≤</span>
                </div>
            </div>
            
            <button class="tariff-btn" onclick="app.selectTariff()" style="width: 100%; padding: 12px 16px; background: #4CAF50; color: white; border: none; border-radius: 8px; font-size: 16px; cursor: pointer; margin-bottom: 12px; display: flex; align-items: center; justify-content: center;">
                –í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ
            </button>
            
            <button class="support-btn" onclick="app.showSupport()">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor" style="margin-right: 8px;">
                    <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"/>
                </svg>
                –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
            </button>

            ${user?.orders?.length > 0 ? `
                <div class="orders-history" style="margin-top: 20px;">
                    <h3>–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤</h3>
                    ${user.orders.map(order => `
                        <div class="order-item" style="border: 1px solid #ddd; padding: 10px; margin: 10px 0; border-radius: 8px;">
                            <p><strong>–ó–∞–∫–∞–∑ #${order.id.slice(-6)}</strong></p>
                            <p>–î–∞—Ç–∞: ${new Date(order.date).toLocaleDateString()}</p>
                            <p>–°—É–º–º–∞: ${order.total} –±–æ–Ω—É—Å–æ–≤</p>
                            <p>–°—Ç–∞—Ç—É—Å: ${order.status}</p>
                        </div>
                    `).join('')}
                </div>
            ` : ''}
        `;
    }

    showPage(page) {
        document.querySelectorAll('.page').forEach(p => p.classList.remove('active'));
        document.querySelectorAll('.nav-item').forEach(item => item.classList.remove('active'));
        
        const pageElement = document.getElementById(`page-${page}`);
        if (pageElement) {
            pageElement.classList.add('active');
        }
        
        // –î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ (–∫—Ä–æ–º–µ auth)
        if (page !== 'auth') {
            const navItem = document.querySelector(`[data-page="${page}"]`);
            if (navItem) {
                navItem.classList.add('active');
            }
        }

        this.currentPage = page;
        this.onPageChange(page);
    }

    navigateTo(page) {
        if (!this.isAuthenticated && page !== 'auth') {
            this.showNotification('–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞', 'warning');
            this.showPage('auth');
            return;
        }
        this.showPage(page);
    }

    loadPrivileges() {
    const container = document.getElementById('page-home');
    if (!container) return;

    // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –∏–∫–æ–Ω–æ–∫
    const categories = [
        { 
            id: 'all', 
            name: '–í—Å–µ'
        },
        { 
            id: 'electronics', 
            name: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞'
        },
        { 
            id: 'home', 
            name: '–î–ª—è –¥–æ–º–∞'
        },
        { 
            id: 'lifestyle', 
            name: '–û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏'
        }
    ];

    // –¢–æ–≤–∞—Ä—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    const products = [
        {
            id: 1,
            name: "–ö–æ—Ñ–µ–≤–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è",
            description: "–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ñ–µ —Å —Ç–∞–π–º–µ—Ä–æ–º",
            price: "2500 –±–æ–Ω—É—Å–æ–≤",
            numericPrice: 2500,
            category: "home"
        },
        {
            id: 2,
            name: "–ù–∞–±–æ—Ä –∫—É—Ö–æ–Ω–Ω—ã—Ö –Ω–æ–∂–µ–π",
            description: "6 –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ",
            price: "1800 –±–æ–Ω—É—Å–æ–≤",
            numericPrice: 1800,
            category: "home"
        },
        {
            id: 3,
            name: "Bluetooth –∫–æ–ª–æ–Ω–∫–∞",
            description: "–í–æ–¥–æ–Ω–µ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º–∞—è, 10W",
            price: "3200 –±–æ–Ω—É—Å–æ–≤",
            numericPrice: 3200,
            category: "electronics"
        },
        {
            id: 4,
            name: "–ü–æ–¥–∞—Ä–æ—á–Ω–∞—è –∫–∞—Ä—Ç–∞ –≤ –º–∞–≥–∞–∑–∏–Ω",
            description: "–ù–æ–º–∏–Ω–∞–ª 1000 —Ä—É–±–ª–µ–π",
            price: "1000 –±–æ–Ω—É—Å–æ–≤",
            numericPrice: 1000,
            category: "lifestyle"
        },
        {
            id: 5,
            name: "–ß–µ–º–æ–¥–∞–Ω –Ω–∞ –∫–æ–ª–µ—Å–∞—Ö",
            description: "55–ª, 4 –∫–æ–ª–µ—Å–∞, —á–µ—Ä–Ω—ã–π",
            price: "4500 –±–æ–Ω—É—Å–æ–≤",
            numericPrice: 4500,
            category: "lifestyle"
        },
        {
            id: 6,
            name: "–§–∏—Ç–Ω–µ—Å-–±—Ä–∞—Å–ª–µ—Ç",
            description: "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–Ω–∞ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
            price: "2800 –±–æ–Ω—É—Å–æ–≤",
            numericPrice: 2800,
            category: "electronics"
        },
        {
            id: 7,
            name: "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏",
            description: "–ó–∞—Ä—è–¥–∫–∞ –æ—Ç case, 20—á —Ä–∞–±–æ—Ç—ã",
            price: "3500 –±–æ–Ω—É—Å–æ–≤",
            numericPrice: 3500,
            category: "electronics"
        },
        {
            id: 8,
            name: "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ —É–∂–∏–Ω",
            description: "–†–µ—Å—Ç–æ—Ä–∞–Ω –Ω–∞ 2 –ø–µ—Ä—Å–æ–Ω—ã",
            price: "2000 –±–æ–Ω—É—Å–æ–≤",
            numericPrice: 2000,
            category: "lifestyle"
        }
    ];

    const categoryNames = {
        electronics: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞",
        home: "–î–ª—è –¥–æ–º–∞", 
        lifestyle: "–û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏"
    };

    container.innerHTML = `
        <div class="categories">
            ${categories.map(cat => `
                <button class="category-btn ${cat.id === 'all' ? 'active' : ''}" 
                        data-category="${cat.id}">
                    ${cat.name}
                </button>
            `).join('')}
        </div>
        <div class="products-grid" id="products-grid">
            ${products.map(product => `
                <div class="product-card" onclick="app.addToCart(${product.id})">
                    <span class="product-category">${categoryNames[product.category]}</span>
                    <h3>${product.name}</h3>
                    <p>${product.description}</p>
                    <div class="product-price">${product.price}</div>
                </div>
            `).join('')}
        </div>
    `;

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    document.querySelectorAll('.category-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
            const category = e.currentTarget.dataset.category;
            
            document.querySelectorAll('.category-btn').forEach(b => b.classList.remove('active'));
            e.currentTarget.classList.add('active');
            
            this.filterProducts(category, products, categoryNames);
        });
    });
}

addToCart(productId) {
    this.checkPhoneBeforeAction('–¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É', () => {
        // –†–∞–∑–ª–∏—á–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏ —É—Å–ª—É–≥–∏ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∑–∞ –±–æ–Ω—É—Å—ã
        const products = {
            1: { 
                name: "–ö–æ—Ñ–µ–≤–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è", 
                description: "–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ñ–µ —Å —Ç–∞–π–º–µ—Ä–æ–º",
                price: "2500 –±–æ–Ω—É—Å–æ–≤", 
                numericPrice: 2500,
                category: "–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞"
            },
            2: { 
                name: "–ù–∞–±–æ—Ä –∫—É—Ö–æ–Ω–Ω—ã—Ö –Ω–æ–∂–µ–π", 
                description: "6 –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ",
                price: "1800 –±–æ–Ω—É—Å–æ–≤", 
                numericPrice: 1800,
                category: "–ö—É—Ö–æ–Ω–Ω—ã–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏"
            },
            3: { 
                name: "Bluetooth –∫–æ–ª–æ–Ω–∫–∞", 
                description: "–í–æ–¥–æ–Ω–µ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º–∞—è, 10W",
                price: "3200 –±–æ–Ω—É—Å–æ–≤", 
                numericPrice: 3200,
                category: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞"
            },
            4: { 
                name: "–ü–æ–¥–∞—Ä–æ—á–Ω–∞—è –∫–∞—Ä—Ç–∞ –≤ –º–∞–≥–∞–∑–∏–Ω", 
                description: "–ù–æ–º–∏–Ω–∞–ª 1000 —Ä—É–±–ª–µ–π",
                price: "1000 –±–æ–Ω—É—Å–æ–≤", 
                numericPrice: 1000,
                category: "–ü–æ–¥–∞—Ä–æ—á–Ω—ã–µ –∫–∞—Ä—Ç—ã"
            },
            5: { 
                name: "–ß–µ–º–æ–¥–∞–Ω –Ω–∞ –∫–æ–ª–µ—Å–∞—Ö", 
                description: "55–ª, 4 –∫–æ–ª–µ—Å–∞, —á–µ—Ä–Ω—ã–π",
                price: "4500 –±–æ–Ω—É—Å–æ–≤", 
                numericPrice: 4500,
                category: "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"
            },
            6: { 
                name: "–§–∏—Ç–Ω–µ—Å-–±—Ä–∞—Å–ª–µ—Ç", 
                description: "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–Ω–∞ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
                price: "2800 –±–æ–Ω—É—Å–æ–≤", 
                numericPrice: 2800,
                category: "–ó–¥–æ—Ä–æ–≤—å–µ"
            },
            7: { 
                name: "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏", 
                description: "–ó–∞—Ä—è–¥–∫–∞ –æ—Ç case, 20—á —Ä–∞–±–æ—Ç—ã",
                price: "3500 –±–æ–Ω—É—Å–æ–≤", 
                numericPrice: 3500,
                category: "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã"
            },
            8: { 
                name: "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ —É–∂–∏–Ω", 
                description: "–†–µ—Å—Ç–æ—Ä–∞–Ω –Ω–∞ 2 –ø–µ—Ä—Å–æ–Ω—ã",
                price: "2000 –±–æ–Ω—É—Å–æ–≤", 
                numericPrice: 2000,
                category: "–†–µ—Å—Ç–æ—Ä–∞–Ω—ã"
            }
        };

        const product = products[productId];
        if (!product) return;

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É
        this.cart.push({
            id: Date.now(),
            productId: productId,
            name: product.name,
            description: product.description,
            price: product.price,
            numericPrice: product.numericPrice,
            category: product.category
        });

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.showNotification(
            '–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É', 
            `${product.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`,
            'success'
        );

        console.log('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É:', product);
        console.log('–ö–æ—Ä–∑–∏–Ω–∞:', this.cart);
    });
}

loadCart() {
        const container = document.getElementById('page-catalog');
        if (!container) return;

        if (this.cart.length === 0) {
            container.innerHTML = `
                <div class="loading" style="text-align: center; padding: 40px 20px; color: var(--tg-theme-hint-color, #999999);">
                    –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞
                </div>
            `;
            return;
        }

        const total = this.cart.reduce((sum, item) => sum + item.numericPrice, 0);

        container.innerHTML = `
            ${this.cart.map(item => `
                <div class="cart-item">
                    <div class="cart-item-info">
                        <span class="cart-item-category">${item.category}</span>
                        <h3>${item.name}</h3>
                        <p>${item.description}</p>
                        <div class="cart-item-price">${item.price}</div>
                    </div>
                    <button onclick="app.removeFromCart(${item.id})" class="delete-btn">
                        –£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
                    </button>
                </div>
            `).join('')}
            <div class="cart-total">
                <h3>–û–±—â–∞—è —Å—É–º–º–∞</h3>
                <div class="cart-total-price">${total} –±–æ–Ω—É—Å–æ–≤</div>
                <button onclick="app.checkout()" class="checkout-btn">
                    –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                </button>
            </div>
        `;
    }

    removeFromCart(itemId) {
        this.cart = this.cart.filter(item => item.id !== itemId);
        this.loadCart(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥ –∫–æ—Ä–∑–∏–Ω—ã
        this.showNotification('–£–¥–∞–ª–µ–Ω–æ', '–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã', 'info');
    }

    showNotification(title, message, type = 'info') {
        if (this.isTelegram) {
            tg.showPopup({
                title: title,
                message: message,
                buttons: [{ type: 'ok' }]
            });
        } else {
            alert(`${title}: ${message}`); 
        }
    }

    showConfirm(title, message) {
        return new Promise((resolve) => {
            if (this.isTelegram) {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Ç–∏–≤–Ω—ã–π confirm Telegram
                tg.showPopup({
                    title: title,
                    message: message,
                    buttons: [
                        { type: 'ok', text: '–û—Ñ–æ—Ä–º–∏—Ç—å' },
                        { type: 'cancel', text: '–û—Ç–º–µ–Ω–∞' }
                    ]
                });
                // –í Telegram –Ω–∞–º –Ω—É–∂–Ω–æ —Å–ª—É—à–∞—Ç—å —Å–æ–±—ã—Ç–∏—è, –Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –≤–µ—Ä–Ω–µ–º true
                resolve(true);
            } else {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –¥–∏–∞–ª–æ–≥ –¥–ª—è –ü–ö
                this.showCustomConfirm(title, message).then(resolve);
            }
        });
    }

     saveUserData() {
        const userData = {
            userData: this.userData,
            userPhone: this.userPhone
        };
        localStorage.setItem('loyaltyProUserData', JSON.stringify(userData));
        console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
    }

    loadSavedUserData() {
        const saved = localStorage.getItem('loyaltyProUserData');
        if (saved) {
            try {
                const userData = JSON.parse(saved);
                this.userData = userData.userData || this.userData;
                this.userPhone = userData.userPhone || this.userPhone;
                console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ localStorage:', this.userPhone);
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', e);
            }
        }
    }

    loadUserData() {
        const user = tg.initDataUnsafe?.user;
        if (user) {
            this.userData = {
                firstName: user.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                lastName: user.last_name || '',
                username: user.username ? `@${user.username}` : '–ù–µ —É–∫–∞–∑–∞–Ω',
                id: user.id
            };
            console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', this.userData);
        } else {
            this.userData = {
                firstName: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                lastName: '',
                username: '–ù–µ —É–∫–∞–∑–∞–Ω',
                id: 'unknown'
            };
        }
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = new LoyaltyProApp();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–≥–¥–∞ DOM –∑–∞–≥—Ä—É–∂–µ–Ω
document.addEventListener('DOMContentLoaded', () => {
    console.log('Loyalty Pro App –∑–∞–ø—É—â–µ–Ω!');
});